{"version":3,"file":"static/js/578.c31b7252.chunk.js","mappings":"sRAEaA,EAAWC,EAAAA,GAAAA,GAAH,wHAMRC,EAAYD,EAAAA,GAAAA,GAAH,kFAMTE,EAAYF,EAAAA,GAAAA,IAAH,4F,kBCJP,SAASG,IACtB,IAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAsBA,IApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gHAECC,EAAAA,EAAAA,IAAgBP,GAFjB,gBAEdQ,EAFc,EAEdA,KACRJ,EAASI,GAHa,iDAKtBC,EAAAA,EAAAA,IAAM,+BAAgC,CACpCC,KAAM,eACNC,MAAO,CACLC,aAAc,MACdC,WAAY,UACZC,MAAO,eAVW,yDAAH,qDAgBvBR,GACD,GAAE,CAACN,IAECG,EAIL,OACE,2BACGA,IACC,SAACR,EAAD,UACGQ,EAAMY,KAAI,YAA4C,IAAzCf,EAAwC,EAAxCA,GAAIgB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACjC,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,CACEqB,IAAKD,EArCN,kCAqCiCA,EAAeE,EAC/CC,IAAKL,IAGNA,GAAO,uBAAIA,KAAY,qCACvBC,GACC,uCAAeA,MAEf,kDAVYjB,EAcnB,MAIc,KAAb,OAALG,QAAK,IAALA,OAAA,EAAAA,EAAOmB,UAAgB,sEAG7B,C,8LCjEDC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,GAAAA,IAAA,qCAAwCC,IAD1D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBN,EAAAA,GAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCL,IADxD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BsB,GAA/B,uFACkBN,EAAAA,GAAAA,IAAA,gBACZM,EADY,4BACeL,IAFjC,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBN,EAAAA,GAAAA,IAAA,gBACZM,EADY,4BACeL,IAFjC,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBT,EAAAA,GAAAA,IAAA,+BACGC,EADH,kBACoBQ,EADpB,+CADlB,cACCN,EADD,yBAIEA,EAASC,MAJX,kE","sources":["pages/Cast/Cast.styled.js","pages/Cast/Cast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  gap: 32px;\n  grid-template-columns: repeat(auto-fit, minmax(212px, 1fr));\n`;\n\nexport const CastItems = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const CastImage = styled.img`\n  object-fit: cover;\n  border-radius: 4px;\n  margin-bottom: 8px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport toast from 'react-hot-toast';\n\nimport { getMovieCredits } from '../../services/api';\n\nimport { CastList, CastItems, CastImage } from './Cast.styled';\nimport notFound from '../../placeholders/notFoundPoster.png';\n\nexport default function Cast() {\n  const posterUrl = `https://image.tmdb.org/t/p/w500`;\n\n  const { id } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const { cast } = await getMovieCredits(id);\n        setCasts(cast);\n      } catch (error) {\n        toast('Sorry, something went wrong!', {\n          icon: 'ðŸ’­',\n          style: {\n            borderRadius: '4px',\n            background: '#e11d48',\n            color: '#fafafafa',\n          },\n        });\n      }\n    };\n\n    fetchMovieCredits();\n  }, [id]);\n\n  if (!casts) {\n    return;\n  }\n\n  return (\n    <div>\n      {casts && (\n        <CastList>\n          {casts.map(({ id, name, character, profile_path }) => {\n            return (\n              <CastItems key={id}>\n                <CastImage\n                  src={profile_path ? posterUrl + profile_path : notFound}\n                  alt={name}\n                />\n\n                {name ? <p>{name}</p> : <p>Anonimous</p>}\n                {character ? (\n                  <p>Character: {character}</p>\n                ) : (\n                  <p>Character: Anonimous</p>\n                )}\n              </CastItems>\n            );\n          })}\n        </CastList>\n      )}\n\n      {casts?.length === 0 && <h2>We don't have any casts for this movie.</h2>}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '69f2fedec75952586c4375268db8626a';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n}\n"],"names":["CastList","styled","CastItems","CastImage","Cast","id","useParams","useState","casts","setCasts","useEffect","fetchMovieCredits","getMovieCredits","cast","toast","icon","style","borderRadius","background","color","map","name","character","profile_path","src","notFound","alt","length","axios","API_KEY","getTrendingMovies","response","data","getMovieDetails","movieId","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}