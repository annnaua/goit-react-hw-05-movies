{"version":3,"file":"static/js/825.85de9653.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","components/MoviesByQuery/MoviesByQuery.styled.js","components/MoviesByQuery/MoviesByQuery.js","pages/Movies/Movies.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 16px;\n`;\n\nexport const SearchField = styled.input`\n  display: block;\n  width: 100%;\n\n  padding: 16px;\n  border: 0;\n  outline: 0;\n\n  background-color: #27272c;\n  border-radius: 4px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 16px 48px;\n  border-radius: 4px;\n  background-color: #e11d48;\n\n  border: 0;\n  outline: 0;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: #e4e4e7;\n\n  :hover {\n    color: #fafafa;\n  }\n\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Form, SearchField, SearchButton } from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [, setSearchParams] = useSearchParams({});\n\n  const handleQueryChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleQuerySubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    setSearchParams({ query: `${searchQuery}` });\n    setSearchQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleQuerySubmit}>\n      <SearchField\n        type=\"text\"\n        value={searchQuery}\n        autocomplete=\"off\"\n        placeholder=\"Search movie\"\n        onChange={handleQueryChange}\n      ></SearchField>\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  gap: 32px;\n  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));\n\n  margin: 60px 0px;\n`;\n\nexport const MovieImage = styled.img`\n  object-fit: cover;\n  border-radius: 4px;\n  margin-bottom: 8px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { MoviesList, MovieImage } from './MoviesByQuery.styled';\nimport notFound from '../../placeholders/notFoundPoster.png';\n\nexport const MoviesByQuery = ({ movies }) => {\n  const posterUrl = `https://image.tmdb.org/t/p/w500`;\n\n  const location = useLocation();\n\n  return (\n    <section>\n      <MoviesList>\n        {movies.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <MovieImage\n                src={poster_path ? posterUrl + poster_path : notFound}\n                alt={title}\n              />\n              <h3>{title}</h3>\n            </NavLink>\n          </li>\n        ))}\n      </MoviesList>\n    </section>\n  );\n};\n\nMoviesByQuery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import toast from 'react-hot-toast';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../../services/api';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesByQuery } from 'components/MoviesByQuery/MoviesByQuery';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams({});\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const { results } = await getMovieByQuery(query);\n        setMovies(results);\n      } catch (error) {\n        toast('Sorry, something went wrong!', {\n          icon: 'ðŸ’­',\n          style: {\n            borderRadius: '4px',\n            background: '#e11d48',\n            color: '#fafafafa',\n          },\n        });\n      }\n    };\n\n    fetchMovieByQuery();\n  }, [query]);\n\n  return (\n    <div>\n      <SearchForm />\n      <MoviesByQuery movies={movies} />\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '69f2fedec75952586c4375268db8626a';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieDetails(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieReviews(movieId) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n}\n"],"names":["Form","styled","SearchField","SearchButton","SearchForm","useState","searchQuery","setSearchQuery","useSearchParams","setSearchParams","onSubmit","e","preventDefault","trim","query","type","value","autocomplete","placeholder","onChange","target","toLowerCase","MoviesList","MovieImage","MoviesByQuery","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","notFound","alt","Movies","setMovies","get","useEffect","fetchMovieByQuery","getMovieByQuery","results","toast","icon","style","borderRadius","background","color","axios","API_KEY","getTrendingMovies","response","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}